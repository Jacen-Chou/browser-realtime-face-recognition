{"version":3,"sources":["sources/test.jpg","components/Home.js","api/face.js","components/ImageInput.js","components/VideoInput.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","Link","to","Component","loadModels","_loadModels","apply","this","arguments","_callee","MODEL_URL","regenerator_default","wrap","_context","prev","next","process","faceapi","stop","getFullFaceDescription","_x","_getFullFaceDescription","_callee2","blob","inputSize","OPTION","useTinyModel","img","fullDesc","_args2","_context2","length","undefined","scoreThreshold","sent","withFaceLandmarks","withFaceDescriptors","abrupt","maxDescriptorDistance","createMatcher","_x2","_createMatcher","_callee3","faceProfile","members","labeledDescriptors","faceMatcher","_context3","Object","keys","map","member","name","descriptors","descriptor","Float32Array","testImg","require","JSON_PROFILE","INIT_STATE","imageURL","detections","match","ImageInput","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","asyncToGenerator","mark","t0","t1","t2","setState","handleImage","state","image","then","fd","detection","findBestMatch","handleFileChange","_ref3","event","resetState","URL","createObjectURL","target","files","loading","objectSpread","_this$state","drawBox","i","_H","box","height","_W","width","_X","_Y","_y","key","style","position","border","borderColor","transform","concat","backgroundColor","marginTop","color","_label","id","type","onChange","accept","src","alt","withRouter","VideoInput","webcam","React","createRef","facingMode","showInput","faceDescCache","setInputDevice","navigator","mediaDevices","enumerateDevices","devices","filter","device","kind","exact","startCapture","_this2","interval","setInterval","capture","clearInterval","current","libCameraPhoto","getDataUri","_this3","dataUri","_this4","spin","tip","delay","size","es_alert","message","description","videoConstraints","camera","clientHeight","videoElement","clientWidth","console","log","_distance","className","display","flexDirection","build_default","audio","ref","screenshotFormat","onTakePhoto","input","placeholder","prefix","icon","suffix","tooltip","title","onPressEnter","App","Router","history","createHistory","basename","Route","path","component","Boolean","window","location","hostname","ReactDOM","render","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7c92104.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.34e86f06.jpg\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Browser Realtime Face Recognition</h2>\r\n        <li>\r\n          <Link to=\"/photo\">Photo Input</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/camera\">Video Camera</Link>\r\n        </li>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import * as faceapi from 'face-api.js'\r\n\r\n// Load models and weights\r\nexport async function loadModels() {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models'\r\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL)\r\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL)\r\n  await faceapi.loadFaceRecognitionModel(MODEL_URL)\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.5\r\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\r\n    inputSize,\r\n    scoreThreshold\r\n  })\r\n  const useTinyModel = true\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob)\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors()\r\n  return fullDesc\r\n}\r\n\r\nconst maxDescriptorDistance = 0.5\r\nexport async function createMatcher(faceProfile) {\r\n  // Create labeled descriptors of member from profile\r\n  let members = Object.keys(faceProfile)\r\n  let labeledDescriptors = members.map(\r\n    member =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        faceProfile[member].name,\r\n        faceProfile[member].descriptors.map(\r\n          descriptor => new Float32Array(descriptor)\r\n        )\r\n      )\r\n  )\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  )\r\n  return faceMatcher\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face'\r\n\r\n// Import image to test API\r\nconst testImg = require('../sources/test.jpg')\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/face-db.json')\r\n\r\n// Initial State\r\nconst INIT_STATE = {\r\n  imageURL: testImg,\r\n  fullDesc: null,\r\n  detections: null,\r\n  descriptors: null,\r\n  match: null\r\n}\r\n\r\nclass ImageInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { ...INIT_STATE, faceMatcher: null }\r\n  }\r\n\r\n  componentWillMount = async () => {\r\n    await loadModels()\r\n    this.setState({ faceMatcher: await createMatcher(JSON_PROFILE) })\r\n    await this.handleImage(this.state.imageURL)\r\n  }\r\n\r\n  handleImage = async (image = this.state.imageURL) => {\r\n    await getFullFaceDescription(image).then(fullDesc => {\r\n      if (!!fullDesc) {\r\n        this.setState({\r\n          fullDesc,\r\n          detections: fullDesc.map(fd => fd.detection),\r\n          descriptors: fullDesc.map(fd => fd.descriptor)\r\n        })\r\n      }\r\n    })\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = await this.state.descriptors.map(descriptor =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      )\r\n      this.setState({ match })\r\n    }\r\n  }\r\n\r\n  handleFileChange = async event => {\r\n    this.resetState()\r\n    await this.setState({\r\n      imageURL: URL.createObjectURL(event.target.files[0]),\r\n      loading: true\r\n    })\r\n    this.handleImage()\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState({ ...INIT_STATE })\r\n  }\r\n\r\n  render() {\r\n    const { imageURL, detections, match } = this.state\r\n\r\n    let drawBox = null\r\n    if (!!detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let _H = detection.box.height\r\n        let _W = detection.box.width\r\n        let _X = detection.box._x\r\n        let _Y = detection.box._y\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(-3px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          id=\"myFileUpload\"\r\n          type=\"file\"\r\n          onChange={this.handleFileChange}\r\n          accept=\".jpg, .jpeg, .png\"\r\n        />\r\n        <div style={{ position: 'relative' }}>\r\n          <div style={{ position: 'absolute' }}>\r\n            <img src={imageURL} alt=\"imageURL\" />\r\n          </div>\r\n          {!!drawBox ? drawBox : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(ImageInput)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Camera from 'react-html5-camera-photo'\r\nimport 'react-html5-camera-photo/build/css/index.css'\r\nimport { Spin, Alert, Input, Tooltip, Icon } from 'antd'\r\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face'\r\n\r\n// Import face profile\r\nconst JSON_PROFILE = require('../descriptors/face-db.json')\r\n\r\nconst WIDTH = 420\r\nconst HEIGHT = 420\r\nconst inputSize = 160\r\nconst face_scan_interval = 1500  // ms\r\n\r\nclass VideoInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.webcam = React.createRef()\r\n    this.state = {\r\n      fullDesc: null,\r\n      detections: null,\r\n      descriptors: null,\r\n      faceMatcher: null,\r\n      match: null,\r\n      facingMode: null,\r\n      loading: true,\r\n      showInput: false,\r\n      faceDescCache: null,\r\n    }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await loadModels()\r\n    let faceMatcher = await createMatcher(JSON_PROFILE)\r\n    this.setState({ faceMatcher: faceMatcher, loading: false })\r\n    await this.setInputDevice()\r\n  }\r\n\r\n  async setInputDevice() {\r\n    let devices = await navigator.mediaDevices.enumerateDevices()\r\n    devices = devices.filter(device => device.kind === 'videoinput')\r\n    let state = { facingMode: { exact: 'environment' } }\r\n    if (devices.length < 2) {\r\n      state.facingMode = 'user'\r\n    }\r\n    this.setState(state)\r\n    this.startCapture()\r\n  }\r\n\r\n  startCapture() {\r\n    this.interval = setInterval(() => {\r\n      this.capture()\r\n    }, face_scan_interval)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  async capture() {\r\n    if (!this.webcam.current) {\r\n      return null\r\n    }\r\n    let fullDesc = await getFullFaceDescription(\r\n      this.webcam.current.libCameraPhoto.getDataUri({}),\r\n      inputSize\r\n    )\r\n    if (!!fullDesc) {\r\n      this.setState({\r\n        detections: fullDesc.map(fd => fd.detection),\r\n        descriptors: fullDesc.map(fd => fd.descriptor)\r\n      })\r\n    }\r\n\r\n    if (!!this.state.descriptors && !!this.state.faceMatcher) {\r\n      let match = this.state.descriptors.map(descriptor =>\r\n        this.state.faceMatcher.findBestMatch(descriptor)\r\n      )\r\n      this.setState({ match })\r\n    }\r\n  }\r\n\r\n  async onTakePhoto(dataUri) {\r\n    const { faceMatcher } = this.state\r\n    let fullDesc = await getFullFaceDescription(dataUri, inputSize)\r\n    if (fullDesc.length !== 1) {\r\n      return null\r\n    }\r\n    let match = faceMatcher.findBestMatch(fullDesc[0].descriptor)\r\n    // if (match._label !== 'unknown') {\r\n    //   return null\r\n    // }\r\n    this.setState({\r\n      faceDescCache: fullDesc[0].descriptor,\r\n      showInput: true\r\n    })\r\n  }\r\n\r\n  async onPressEnter(name) {\r\n    // modify face-db.json\r\n    this.setState({ showInput: false })\r\n    return null\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <Spin tip=\"Loading...\" delay=\"200\" size=\"large\">\r\n          <Alert\r\n            message=\"模型加载中\"\r\n            description=\"第一次打开时间可能较长，如果一直在加载，这边推荐亲科学上网...\"\r\n            type=\"info\"\r\n          />\r\n        </Spin>\r\n      )\r\n    }\r\n    \r\n    const { detections, match, facingMode, showInput } = this.state\r\n\r\n    let videoConstraints = null\r\n    let camera = facingMode === 'user' ? 'Front' : 'Back'\r\n    if (facingMode) {\r\n      videoConstraints = {\r\n        width: WIDTH,\r\n        height: HEIGHT,\r\n        facingMode: facingMode\r\n      }\r\n    }\r\n\r\n    let drawBox = null\r\n\r\n    // draw bounding box\r\n    if (detections) {\r\n      drawBox = detections.map((detection, i) => {\r\n        let clientHeight = this.webcam.current.libCameraPhoto.videoElement.clientHeight\r\n        let clientWidth = this.webcam.current.libCameraPhoto.videoElement.clientWidth\r\n        let _H = null\r\n        let _W = null\r\n        let _X = null\r\n        let _Y = null\r\n        console.log(clientHeight, clientWidth)\r\n        if (clientHeight < clientWidth) {\r\n          _H = detection.box.height / 480 * clientHeight * 0.9\r\n          _W = detection.box.width / 640 * clientWidth * 0.8\r\n          _X = clientWidth - detection.box._x / 640 * clientWidth * 1.1 - _W\r\n          _Y = detection.box._y / 480 * clientHeight * 0.9\r\n        } else {\r\n          _H = detection.box.height / 480 * clientHeight * 0.7\r\n          _W = detection.box.width / 640 * clientWidth * 0.9\r\n          _X = (clientWidth - detection.box._x / 640 * clientWidth - _W) * 0.55 * (2 - (detection.box._x + detection.box.width / 2) / (clientWidth * 0.5))\r\n          _Y = detection.box._y / 480 * clientHeight * 0.7\r\n        }\r\n\r\n        return (\r\n          <div key={i}>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                border: 'solid',\r\n                borderColor: 'blue',\r\n                height: _H,\r\n                width: _W,\r\n                transform: `translate(${_X}px,${_Y}px)`\r\n              }}\r\n            >\r\n              {!!match && !!match[i] ? (\r\n                <p\r\n                  style={{\r\n                    backgroundColor: 'blue',\r\n                    border: 'solid',\r\n                    borderColor: 'blue',\r\n                    width: _W,\r\n                    marginTop: 0,\r\n                    color: '#fff',\r\n                    transform: `translate(0px,${_H}px)`\r\n                  }}\r\n                >\r\n                  {match[i]._label}  ({1 - match[i]._distance})\r\n                  {clientWidth}\r\n                </p>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className=\"Camera\"\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          // alignItems: 'center'\r\n        }}\r\n      >\r\n        <p>Camera: {camera}</p>\r\n        <div style={{ position: 'relative' }}>\r\n          {videoConstraints ? (\r\n            <div className=\"inner\" style={{ position: 'absolute' }}>\r\n              <Camera\r\n                audio={false}\r\n                ref={this.webcam}\r\n                screenshotFormat=\"image/jpeg\"\r\n                onTakePhoto={dataUri => this.onTakePhoto(dataUri)}\r\n                // videoConstraints={videoConstraints}\r\n              />\r\n            </div>\r\n          ) : null}\r\n          {showInput ? (\r\n            <Input\r\n              placeholder=\"Enter your username\"\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              suffix={\r\n                <Tooltip title=\"Extra information\">\r\n                  <Icon type=\"info-circle\" style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                </Tooltip>\r\n              }\r\n              onPressEnter={name => this.onPressEnter(name)}\r\n            />\r\n          ) : null}\r\n          {drawBox}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(VideoInput)\r\n","import React, { Component } from 'react'\r\nimport { Route, Router } from 'react-router-dom'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport '../styles/App.css'\r\n\r\nimport Home from './Home'\r\nimport ImageInput from './ImageInput'\r\nimport VideoInput from './VideoInput'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router history={createHistory({ basename: process.env.PUBLIC_URL })}>\r\n          <div className=\"route\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/photo\" component={ImageInput} />\r\n            <Route exact path=\"/camera\" component={VideoInput} />\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"antd/dist/antd.css\";\r\nimport './styles/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}